// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SqliteClassLibrary;

#nullable disable

namespace SqliteClassLibrary.Migrations
{
    [DbContext(typeof(StudyContext))]
    partial class StudyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("SqliteClassLibrary.Models.Agenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DiaSemana")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Duracao")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MateriaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MateriaId");

                    b.ToTable("Agendas");
                });

            modelBuilder.Entity("SqliteClassLibrary.Models.Materia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MateriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeMateria")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MateriaId");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("SqliteClassLibrary.Models.Agenda", b =>
                {
                    b.HasOne("SqliteClassLibrary.Models.Materia", "Materia")
                        .WithMany()
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("SqliteClassLibrary.Models.Materia", b =>
                {
                    b.HasOne("SqliteClassLibrary.Models.Materia", null)
                        .WithMany("Materias")
                        .HasForeignKey("MateriaId");
                });

            modelBuilder.Entity("SqliteClassLibrary.Models.Materia", b =>
                {
                    b.Navigation("Materias");
                });
#pragma warning restore 612, 618
        }
    }
}
